auth:
  adminUser: admin
  adminPassword: "password"

replicaCount: 1

service:
  type: NodePort

  nodePorts:
    http: "30080"
    https: "30443"

ingress:
  enabled: true
  ingressClassName: "alb"
  pathType: ImplementationSpecific
  hostname: keycloak.smartseo.kr
  path: /
  backend:
    service:
      name: keycloak
      port:
        number: 80
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/load-balancer-name: system-alb
    alb.ingress.kubernetes.io/group.name: "system-alb-group"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80,"HTTPS":443}]'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-northeast-2:221370546661:certificate/6f73fffc-dc0f-4c85-a295-147c64be7fcb
    alb.ingress.kubernetes.io/backend-protocol: "https"
    alb.ingress.kubernetes.io/proxy-protocol: "*"
    alb.ingress.kubernetes.io/cross-zone-load-balancing-enabled: "true"
    alb.ingress.kubernetes.io/ssl-ports: "https"
    alb.ingress.kubernetes.io/ssl-cert: "arn:aws:acm:us-east-1:123456789:certificate/xxxxxxxxxxxxxx"
    alb.ingress.kubernetes.io/additional-resource-tags: "type=external"
  ## @param ingress.apiVersion Force Ingress API ve
tls:
  enabled: true
  autoGenerated: true

# metrics:
#   enabled: true
#   serviceMonitor:
#     enabled: true
#   prometheusRule:
#     enabled: true

postgresql:
  enabled: false

externalDatabase:
  host: "postgresql.db.svc.cluster.local"
  port: 5432
  user: admin
  database: test
  password: "password"
